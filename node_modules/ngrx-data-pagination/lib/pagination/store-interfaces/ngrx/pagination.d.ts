import { EntityCollectionServiceBase } from '@ngrx/data';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { AnyEntity } from '../../entity';
import { ObservablePaginationFunction } from '../../iterator/pagination-function';
import { AllNgrxPaginationObservables, AllNgrxPaginationSelectors } from './selectors';
/**
 * Adapts `StorePaginationContext` to work with ngrx/data
 */
export declare class Pagination<Entity extends AnyEntity, NextPageState = any> {
    private entityService;
    private storePaginationContext;
    selectors: AllNgrxPaginationSelectors<Entity>;
    selectors$: AllNgrxPaginationObservables<Entity>;
    constructor(contextId: string, paginationFunction: ObservablePaginationFunction<Entity, NextPageState>, entityService: EntityCollectionServiceBase<Entity, any>, store: Store<any>, ngrxDataPaginationStoreKey: string, addToCache: boolean);
    nextPage(): void;
    prevPage(): void;
    /** Not yet cancellable! Use with caution. */
    _loadAllPages(): Observable<unknown>;
    private _loadAllPagesP;
}
