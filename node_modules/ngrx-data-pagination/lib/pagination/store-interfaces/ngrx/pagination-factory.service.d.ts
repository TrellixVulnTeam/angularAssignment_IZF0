import { EntityCollectionServiceBase } from '@ngrx/data';
import { Store } from '@ngrx/store';
import { AnyEntity } from '../../entity';
import { ObservablePaginationFunction } from '../../iterator/pagination-function';
import { Pagination } from './pagination';
export interface PaginationFactoryArgs<Entity extends AnyEntity, NextPageState> {
    contextId?: string;
    paginationFunction: ObservablePaginationFunction<Entity, NextPageState>;
    entityService: EntityCollectionServiceBase<Entity, any>;
    addToCache?: boolean;
}
export declare class PaginationFactory {
    private store;
    private counter;
    constructor(store: Store<any>);
    create<Entity extends AnyEntity, NextPageState>({ entityService, paginationFunction, addToCache, contextId, }: PaginationFactoryArgs<Entity, NextPageState>): Pagination<Entity, NextPageState>;
}
