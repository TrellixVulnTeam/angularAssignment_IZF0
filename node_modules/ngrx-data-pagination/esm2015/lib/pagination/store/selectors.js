/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const finalPageIndex = (/**
 * @param {?} __0
 * @return {?}
 */
({ done, pages }) => {
    if (!done || !pages || !pages.length) {
        return null;
    }
    return pages.length - 1;
});
const ɵ0 = finalPageIndex;
/** @type {?} */
const flatten = (/**
 * @template A
 * @param {?} arrays
 * @return {?}
 */
(arrays) => arrays.reduce((/**
 * @param {?} result
 * @param {?} as
 * @return {?}
 */
(result, as) => result.concat(as))));
const ɵ1 = flatten;
const ɵ2 = /**
 * @param {?} __0
 * @return {?}
 */
({ pages, currentPage, }) => (pages ? pages[currentPage] : null), ɵ3 = /**
 * @param {?} __0
 * @return {?}
 */
({ pages }) => flatten(pages), ɵ4 = /**
 * @param {?} __0
 * @return {?}
 */
({ pages }) => pages, ɵ5 = /**
 * @param {?} __0
 * @return {?}
 */
({ pages, currentPage }) => !!pages[currentPage + 1], ɵ6 = /**
 * @param {?} __0
 * @return {?}
 */
({ pages, currentPage, loadingNewPage, }) => {
    if (!Number.isInteger(currentPage)) {
        return loadingNewPage;
    }
    return !pages[currentPage + 1] && loadingNewPage;
}, ɵ7 = /**
 * @param {?} __0
 * @return {?}
 */
({ loadingNewPage }) => loadingNewPage, ɵ8 = /**
 * @param {?} __0
 * @return {?}
 */
({ currentPage }) => currentPage >= 0 ? currentPage : null, ɵ9 = /**
 * @param {?} __0
 * @return {?}
 */
({ done }) => done, ɵ10 = /**
 * @param {?} __0
 * @return {?}
 */
({ currentPage }) => currentPage === 0, ɵ11 = /**
 * @param {?} state
 * @return {?}
 */
(state) => {
    const { currentPage } = state;
    /** @type {?} */
    const finalIndex = finalPageIndex(state);
    if (typeof finalIndex !== 'number' || typeof currentPage !== 'number') {
        return false;
    }
    return currentPage === finalIndex;
};
/** @type {?} */
export const contextSelectors = {
    currentPageIds: (ɵ2),
    allIds: (ɵ3),
    allPageIds: (ɵ4),
    nextPageLoaded: (ɵ5),
    nextPageLoading: (ɵ6),
    loadingNewPage: (ɵ7),
    pageNumber: (ɵ8),
    done: (ɵ9),
    finalPageIndex,
    onFirstPage: (ɵ10),
    onFinalPage: (ɵ11),
};
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmdyeC1kYXRhLXBhZ2luYXRpb24vIiwic291cmNlcyI6WyJsaWIvcGFnaW5hdGlvbi9zdG9yZS9zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7TUFHTSxjQUFjOzs7O0FBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQTBCLEVBQVUsRUFBRTtJQUN6RSxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtRQUNwQyxPQUFPLElBQUksQ0FBQztLQUNiO0lBRUQsT0FBTyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUMxQixDQUFDLENBQUE7OztNQUVLLE9BQU87Ozs7O0FBQUcsQ0FBSSxNQUFhLEVBQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNOzs7OztBQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBQyxDQUFBOzs7Ozs7QUFHekUsQ0FBQyxFQUNmLEtBQUssRUFDTCxXQUFXLEdBQ1ksRUFBYyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDOzs7O0FBQ3JFLENBQUMsRUFBRSxLQUFLLEVBQTBCLEVBQWMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7Ozs7QUFDN0QsQ0FBQyxFQUFFLEtBQUssRUFBMEIsRUFBZ0IsRUFBRSxDQUFDLEtBQUs7Ozs7QUFDdEQsQ0FBQyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQTBCLEVBQVcsRUFBRSxDQUMxRSxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7Ozs7QUFDVCxDQUFDLEVBQ2hCLEtBQUssRUFDTCxXQUFXLEVBQ1gsY0FBYyxHQUNTLEVBQVcsRUFBRTtJQUNwQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsRUFBRTtRQUNsQyxPQUFPLGNBQWMsQ0FBQztLQUN2QjtJQUNELE9BQU8sQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQyxJQUFJLGNBQWMsQ0FBQztBQUNuRCxDQUFDOzs7O0FBQ2UsQ0FBQyxFQUFFLGNBQWMsRUFBMEIsRUFBVyxFQUFFLENBQ3RFLGNBQWM7Ozs7QUFDSixDQUFDLEVBQUUsV0FBVyxFQUEwQixFQUFVLEVBQUUsQ0FDOUQsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJOzs7O0FBQ2pDLENBQUMsRUFBRSxJQUFJLEVBQTBCLEVBQUUsRUFBRSxDQUFDLElBQUk7Ozs7QUFFbkMsQ0FBQyxFQUFFLFdBQVcsRUFBMEIsRUFBRSxFQUFFLENBQUMsV0FBVyxLQUFLLENBQUM7Ozs7QUFDOUQsQ0FBQyxLQUE2QixFQUFFLEVBQUU7VUFDdkMsRUFBRSxXQUFXLEVBQUUsR0FBRyxLQUFLOztVQUN2QixVQUFVLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQztJQUV4QyxJQUFJLE9BQU8sVUFBVSxLQUFLLFFBQVEsSUFBSSxPQUFPLFdBQVcsS0FBSyxRQUFRLEVBQUU7UUFDckUsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELE9BQU8sV0FBVyxLQUFLLFVBQVUsQ0FBQztBQUNwQyxDQUFDOztBQW5DSCxNQUFNLE9BQU8sZ0JBQWdCLEdBQUc7SUFDOUIsY0FBYyxNQUcrRDtJQUM3RSxNQUFNLE1BQW1FO0lBQ3pFLFVBQVUsTUFBNEQ7SUFDdEUsY0FBYyxNQUNZO0lBQzFCLGVBQWUsTUFTZDtJQUNELGNBQWMsTUFDRTtJQUNoQixVQUFVLE1BQzZCO0lBQ3ZDLElBQUksTUFBNEM7SUFDaEQsY0FBYztJQUNkLFdBQVcsT0FBZ0U7SUFDM0UsV0FBVyxPQVNWO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHlJZCB9IGZyb20gJy4uL2VudGl0eSc7XG5pbXBvcnQgeyBQYWdpbmF0aW9uQ29udGV4dFN0YXRlIH0gZnJvbSAnLi9zdGF0ZSc7XG5cbmNvbnN0IGZpbmFsUGFnZUluZGV4ID0gKHsgZG9uZSwgcGFnZXMgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSk6IG51bWJlciA9PiB7XG4gIGlmICghZG9uZSB8fCAhcGFnZXMgfHwgIXBhZ2VzLmxlbmd0aCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHBhZ2VzLmxlbmd0aCAtIDE7XG59O1xuXG5jb25zdCBmbGF0dGVuID0gPEE+KGFycmF5czogQVtdW10pOiBBW10gPT4gYXJyYXlzLnJlZHVjZSgocmVzdWx0LCBhcykgPT4gcmVzdWx0LmNvbmNhdChhcykpXG5cbmV4cG9ydCBjb25zdCBjb250ZXh0U2VsZWN0b3JzID0ge1xuICBjdXJyZW50UGFnZUlkczogKHtcbiAgICBwYWdlcyxcbiAgICBjdXJyZW50UGFnZSxcbiAgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSk6IEVudGl0eUlkW10gPT4gKHBhZ2VzID8gcGFnZXNbY3VycmVudFBhZ2VdIDogbnVsbCksXG4gIGFsbElkczogKHsgcGFnZXMgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSk6IEVudGl0eUlkW10gPT4gZmxhdHRlbihwYWdlcyksXG4gIGFsbFBhZ2VJZHM6ICh7IHBhZ2VzIH06IFBhZ2luYXRpb25Db250ZXh0U3RhdGUpOiBFbnRpdHlJZFtdW10gPT4gcGFnZXMsXG4gIG5leHRQYWdlTG9hZGVkOiAoeyBwYWdlcywgY3VycmVudFBhZ2UgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSk6IGJvb2xlYW4gPT5cbiAgICAhIXBhZ2VzW2N1cnJlbnRQYWdlICsgMV0sXG4gIG5leHRQYWdlTG9hZGluZzogKHtcbiAgICBwYWdlcyxcbiAgICBjdXJyZW50UGFnZSxcbiAgICBsb2FkaW5nTmV3UGFnZSxcbiAgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSk6IGJvb2xlYW4gPT4ge1xuICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihjdXJyZW50UGFnZSkpIHtcbiAgICAgIHJldHVybiBsb2FkaW5nTmV3UGFnZTtcbiAgICB9XG4gICAgcmV0dXJuICFwYWdlc1tjdXJyZW50UGFnZSArIDFdICYmIGxvYWRpbmdOZXdQYWdlO1xuICB9LFxuICBsb2FkaW5nTmV3UGFnZTogKHsgbG9hZGluZ05ld1BhZ2UgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSk6IGJvb2xlYW4gPT5cbiAgICBsb2FkaW5nTmV3UGFnZSxcbiAgcGFnZU51bWJlcjogKHsgY3VycmVudFBhZ2UgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSk6IG51bWJlciA9PlxuICAgIGN1cnJlbnRQYWdlID49IDAgPyBjdXJyZW50UGFnZSA6IG51bGwsXG4gIGRvbmU6ICh7IGRvbmUgfTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSkgPT4gZG9uZSxcbiAgZmluYWxQYWdlSW5kZXgsXG4gIG9uRmlyc3RQYWdlOiAoeyBjdXJyZW50UGFnZSB9OiBQYWdpbmF0aW9uQ29udGV4dFN0YXRlKSA9PiBjdXJyZW50UGFnZSA9PT0gMCxcbiAgb25GaW5hbFBhZ2U6IChzdGF0ZTogUGFnaW5hdGlvbkNvbnRleHRTdGF0ZSkgPT4ge1xuICAgIGNvbnN0IHsgY3VycmVudFBhZ2UgfSA9IHN0YXRlO1xuICAgIGNvbnN0IGZpbmFsSW5kZXggPSBmaW5hbFBhZ2VJbmRleChzdGF0ZSk7XG5cbiAgICBpZiAodHlwZW9mIGZpbmFsSW5kZXggIT09ICdudW1iZXInIHx8IHR5cGVvZiBjdXJyZW50UGFnZSAhPT0gJ251bWJlcicpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFBhZ2UgPT09IGZpbmFsSW5kZXg7XG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBDb250ZXh0U2VsZWN0b3JzID0gdHlwZW9mIGNvbnRleHRTZWxlY3RvcnM7XG4iXX0=