/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const PaginationActionType = {
    RESET_PAGINATION_STATE: '[mb-Pagination] Reset Pagination State',
    GET_NEXT_PAGE: '[mb-Pagination] Get Next Page',
    GET_NEXT_PAGE_SUCCESS: '[mb-Pagination] Get Next Page Success',
    GET_NEXT_PAGE_EMPTY: '[mb-Pagination] Get Next Page Empty',
    PREV_PAGE: '[mb-Pagination] Prev Page',
    NEXT_PAGE: '[mb-Pagination] Next Page',
};
export { PaginationActionType };
/** @type {?} */
const T = PaginationActionType;
/**
 * @record
 */
function Action() { }
if (false) {
    /** @type {?} */
    Action.prototype.type;
}
/**
 * @record
 */
export function PaginationActionT() { }
if (false) {
    /** @type {?} */
    PaginationActionT.prototype.type;
    /** @type {?} */
    PaginationActionT.prototype.contextId;
}
export class ResetPaginationState {
    /**
     * @param {?} contextId
     */
    constructor(contextId) {
        this.contextId = contextId;
        this.type = T.RESET_PAGINATION_STATE;
    }
}
if (false) {
    /** @type {?} */
    ResetPaginationState.prototype.type;
    /** @type {?} */
    ResetPaginationState.prototype.contextId;
}
export class GetNextPage {
    /**
     * @param {?} contextId
     */
    constructor(contextId) {
        this.contextId = contextId;
        this.type = T.GET_NEXT_PAGE;
    }
}
if (false) {
    /** @type {?} */
    GetNextPage.prototype.type;
    /** @type {?} */
    GetNextPage.prototype.contextId;
}
export class GetNextPageSuccess {
    /**
     * @param {?} contextId
     * @param {?} entityIds
     * @param {?} done
     */
    constructor(contextId, entityIds, done) {
        this.contextId = contextId;
        this.entityIds = entityIds;
        this.done = done;
        this.type = T.GET_NEXT_PAGE_SUCCESS;
    }
}
if (false) {
    /** @type {?} */
    GetNextPageSuccess.prototype.type;
    /** @type {?} */
    GetNextPageSuccess.prototype.contextId;
    /** @type {?} */
    GetNextPageSuccess.prototype.entityIds;
    /** @type {?} */
    GetNextPageSuccess.prototype.done;
}
export class GetNextPageEmpty {
    /**
     * @param {?} contextId
     */
    constructor(contextId) {
        this.contextId = contextId;
        this.type = T.GET_NEXT_PAGE_EMPTY;
    }
}
if (false) {
    /** @type {?} */
    GetNextPageEmpty.prototype.type;
    /** @type {?} */
    GetNextPageEmpty.prototype.contextId;
}
export class PrevPage {
    /**
     * @param {?} contextId
     */
    constructor(contextId) {
        this.contextId = contextId;
        this.type = T.PREV_PAGE;
    }
}
if (false) {
    /** @type {?} */
    PrevPage.prototype.type;
    /** @type {?} */
    PrevPage.prototype.contextId;
}
export class NextPage {
    /**
     * @param {?} contextId
     */
    constructor(contextId) {
        this.contextId = contextId;
        this.type = T.NEXT_PAGE;
    }
}
if (false) {
    /** @type {?} */
    NextPage.prototype.type;
    /** @type {?} */
    NextPage.prototype.contextId;
}
/** @type {?} */
export const makeActionCreators = (/**
 * @param {?} contextId
 * @return {?}
 */
(contextId) => ({
    ResetPaginationState: (/**
     * @return {?}
     */
    () => new ResetPaginationState(contextId)),
    GetNextPage: (/**
     * @return {?}
     */
    () => new GetNextPage(contextId)),
    GetNextPageSuccess: (/**
     * @param {?} entityIds
     * @param {?} done
     * @return {?}
     */
    (entityIds, done) => new GetNextPageSuccess(contextId, entityIds, done)),
    GetNextPageEmpty: (/**
     * @return {?}
     */
    () => new GetNextPageEmpty(contextId)),
    PrevPage: (/**
     * @return {?}
     */
    () => new PrevPage(contextId)),
    NextPage: (/**
     * @return {?}
     */
    () => new NextPage(contextId)),
}));
/** @type {?} */
export const makeDispatchers = (/**
 * @param {?} contextId
 * @param {?} dispatch
 * @return {?}
 */
(contextId, dispatch) => {
    /** @type {?} */
    const actionCreators = makeActionCreators(contextId);
    return {
        ResetPaginationState: (/**
         * @return {?}
         */
        () => dispatch(actionCreators.ResetPaginationState())),
        GetNextPage: (/**
         * @return {?}
         */
        () => dispatch(actionCreators.GetNextPage())),
        GetNextPageSuccess: (/**
         * @param {?} entityIds
         * @param {?} done
         * @return {?}
         */
        (entityIds, done) => dispatch(actionCreators.GetNextPageSuccess(entityIds, done))),
        GetNextPageEmpty: (/**
         * @return {?}
         */
        () => dispatch(actionCreators.GetNextPageEmpty())),
        PrevPage: (/**
         * @return {?}
         */
        () => dispatch(actionCreators.PrevPage())),
        NextPage: (/**
         * @return {?}
         */
        () => dispatch(actionCreators.NextPage())),
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ncngtZGF0YS1wYWdpbmF0aW9uLyIsInNvdXJjZXMiOlsibGliL3BhZ2luYXRpb24vc3RvcmUvYWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7SUFHRSx3QkFBeUIsd0NBQXdDO0lBQ2pFLGVBQWdCLCtCQUErQjtJQUMvQyx1QkFBd0IsdUNBQXVDO0lBQy9ELHFCQUFzQixxQ0FBcUM7SUFDM0QsV0FBWSwyQkFBMkI7SUFDdkMsV0FBWSwyQkFBMkI7Ozs7TUFHbkMsQ0FBQyxHQUFHLG9CQUFvQjs7OztBQUU5QixxQkFFQzs7O0lBREMsc0JBQWE7Ozs7O0FBR2YsdUNBR0M7OztJQUZDLGlDQUEyQjs7SUFDM0Isc0NBQWtCOztBQUdwQixNQUFNLE9BQU8sb0JBQW9COzs7O0lBRS9CLFlBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7UUFEM0IsU0FBSSxHQUFHLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQztJQUNGLENBQUM7Q0FDekM7OztJQUZDLG9DQUF5Qzs7SUFDN0IseUNBQXdCOztBQUV0QyxNQUFNLE9BQU8sV0FBVzs7OztJQUV0QixZQUFtQixTQUFpQjtRQUFqQixjQUFTLEdBQVQsU0FBUyxDQUFRO1FBRDNCLFNBQUksR0FBRyxDQUFDLENBQUMsYUFBYSxDQUFDO0lBQ08sQ0FBQztDQUN6Qzs7O0lBRkMsMkJBQWdDOztJQUNwQixnQ0FBd0I7O0FBRXRDLE1BQU0sT0FBTyxrQkFBa0I7Ozs7OztJQUU3QixZQUNTLFNBQWlCLEVBQ2pCLFNBQXFCLEVBQ3JCLElBQWE7UUFGYixjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQ2pCLGNBQVMsR0FBVCxTQUFTLENBQVk7UUFDckIsU0FBSSxHQUFKLElBQUksQ0FBUztRQUpiLFNBQUksR0FBRyxDQUFDLENBQUMscUJBQXFCLENBQUM7SUFLckMsQ0FBQztDQUNMOzs7SUFOQyxrQ0FBd0M7O0lBRXRDLHVDQUF3Qjs7SUFDeEIsdUNBQTRCOztJQUM1QixrQ0FBb0I7O0FBR3hCLE1BQU0sT0FBTyxnQkFBZ0I7Ozs7SUFFM0IsWUFDUyxTQUFpQjtRQUFqQixjQUFTLEdBQVQsU0FBUyxDQUFRO1FBRmpCLFNBQUksR0FBRyxDQUFDLENBQUMsbUJBQW1CLENBQUM7SUFHbkMsQ0FBQztDQUNMOzs7SUFKQyxnQ0FBc0M7O0lBRXBDLHFDQUF3Qjs7QUFHNUIsTUFBTSxPQUFPLFFBQVE7Ozs7SUFFbkIsWUFBbUIsU0FBaUI7UUFBakIsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUQzQixTQUFJLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNXLENBQUM7Q0FDekM7OztJQUZDLHdCQUE0Qjs7SUFDaEIsNkJBQXdCOztBQUV0QyxNQUFNLE9BQU8sUUFBUTs7OztJQUVuQixZQUFtQixTQUFpQjtRQUFqQixjQUFTLEdBQVQsU0FBUyxDQUFRO1FBRDNCLFNBQUksR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQ1csQ0FBQztDQUN6Qzs7O0lBRkMsd0JBQTRCOztJQUNoQiw2QkFBd0I7OztBQVd0QyxNQUFNLE9BQU8sa0JBQWtCOzs7O0FBQUcsQ0FBQyxTQUFpQixFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3hELG9CQUFvQjs7O0lBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUMvRCxXQUFXOzs7SUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUM3QyxrQkFBa0I7Ozs7O0lBQUUsQ0FBQyxTQUFxQixFQUFFLElBQWEsRUFBRSxFQUFFLENBQzNELElBQUksa0JBQWtCLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUNwRCxnQkFBZ0I7OztJQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksZ0JBQWdCLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDdkQsUUFBUTs7O0lBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDdkMsUUFBUTs7O0lBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUE7Q0FDeEMsQ0FBQyxDQUFBOztBQUVGLE1BQU0sT0FBTyxlQUFlOzs7OztBQUFHLENBQzdCLFNBQWlCLEVBQ2pCLFFBQWtDLEVBQ2xDLEVBQUU7O1VBQ0ksY0FBYyxHQUFHLGtCQUFrQixDQUFDLFNBQVMsQ0FBQztJQUVwRCxPQUFPO1FBQ0wsb0JBQW9COzs7UUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLG9CQUFvQixFQUFFLENBQUMsQ0FBQTtRQUMzRSxXQUFXOzs7UUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUE7UUFDekQsa0JBQWtCOzs7OztRQUFFLENBQUMsU0FBcUIsRUFBRSxJQUFhLEVBQUUsRUFBRSxDQUMzRCxRQUFRLENBQUMsY0FBYyxDQUFDLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO1FBQzlELGdCQUFnQjs7O1FBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLENBQUE7UUFDbkUsUUFBUTs7O1FBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFBO1FBQ25ELFFBQVE7OztRQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQTtLQUNwRCxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5SWQgfSBmcm9tICcuLi9lbnRpdHknO1xuXG5leHBvcnQgZW51bSBQYWdpbmF0aW9uQWN0aW9uVHlwZSB7XG4gIFJFU0VUX1BBR0lOQVRJT05fU1RBVEUgPSAnW21iLVBhZ2luYXRpb25dIFJlc2V0IFBhZ2luYXRpb24gU3RhdGUnLFxuICBHRVRfTkVYVF9QQUdFID0gJ1ttYi1QYWdpbmF0aW9uXSBHZXQgTmV4dCBQYWdlJyxcbiAgR0VUX05FWFRfUEFHRV9TVUNDRVNTID0gJ1ttYi1QYWdpbmF0aW9uXSBHZXQgTmV4dCBQYWdlIFN1Y2Nlc3MnLFxuICBHRVRfTkVYVF9QQUdFX0VNUFRZID0gJ1ttYi1QYWdpbmF0aW9uXSBHZXQgTmV4dCBQYWdlIEVtcHR5JyxcbiAgUFJFVl9QQUdFID0gJ1ttYi1QYWdpbmF0aW9uXSBQcmV2IFBhZ2UnLFxuICBORVhUX1BBR0UgPSAnW21iLVBhZ2luYXRpb25dIE5leHQgUGFnZScsXG59XG5cbmNvbnN0IFQgPSBQYWdpbmF0aW9uQWN0aW9uVHlwZTtcblxuaW50ZXJmYWNlIEFjdGlvbiB7XG4gIHR5cGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQYWdpbmF0aW9uQWN0aW9uVCBleHRlbmRzIEFjdGlvbiB7XG4gIHR5cGU6IFBhZ2luYXRpb25BY3Rpb25UeXBlO1xuICBjb250ZXh0SWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIFJlc2V0UGFnaW5hdGlvblN0YXRlIGltcGxlbWVudHMgUGFnaW5hdGlvbkFjdGlvblQge1xuICByZWFkb25seSB0eXBlID0gVC5SRVNFVF9QQUdJTkFUSU9OX1NUQVRFO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGV4dElkOiBzdHJpbmcpIHt9XG59XG5leHBvcnQgY2xhc3MgR2V0TmV4dFBhZ2UgaW1wbGVtZW50cyBQYWdpbmF0aW9uQWN0aW9uVCB7XG4gIHJlYWRvbmx5IHR5cGUgPSBULkdFVF9ORVhUX1BBR0U7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb250ZXh0SWQ6IHN0cmluZykge31cbn1cbmV4cG9ydCBjbGFzcyBHZXROZXh0UGFnZVN1Y2Nlc3MgaW1wbGVtZW50cyBQYWdpbmF0aW9uQWN0aW9uVCB7XG4gIHJlYWRvbmx5IHR5cGUgPSBULkdFVF9ORVhUX1BBR0VfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGNvbnRleHRJZDogc3RyaW5nLFxuICAgIHB1YmxpYyBlbnRpdHlJZHM6IEVudGl0eUlkW10sXG4gICAgcHVibGljIGRvbmU6IGJvb2xlYW4sXG4gICkge31cbn1cbmV4cG9ydCBjbGFzcyBHZXROZXh0UGFnZUVtcHR5IGltcGxlbWVudHMgUGFnaW5hdGlvbkFjdGlvblQge1xuICByZWFkb25seSB0eXBlID0gVC5HRVRfTkVYVF9QQUdFX0VNUFRZO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgY29udGV4dElkOiBzdHJpbmdcbiAgKSB7fVxufVxuZXhwb3J0IGNsYXNzIFByZXZQYWdlIGltcGxlbWVudHMgUGFnaW5hdGlvbkFjdGlvblQge1xuICByZWFkb25seSB0eXBlID0gVC5QUkVWX1BBR0U7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb250ZXh0SWQ6IHN0cmluZykge31cbn1cbmV4cG9ydCBjbGFzcyBOZXh0UGFnZSBpbXBsZW1lbnRzIFBhZ2luYXRpb25BY3Rpb25UIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFQuTkVYVF9QQUdFO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGV4dElkOiBzdHJpbmcpIHt9XG59XG5cbmV4cG9ydCB0eXBlIFBhZ2luYXRpb25BY3Rpb24gPVxuICB8IFJlc2V0UGFnaW5hdGlvblN0YXRlXG4gIHwgR2V0TmV4dFBhZ2VcbiAgfCBHZXROZXh0UGFnZVN1Y2Nlc3NcbiAgfCBHZXROZXh0UGFnZUVtcHR5XG4gIHwgUHJldlBhZ2VcbiAgfCBOZXh0UGFnZTtcblxuZXhwb3J0IGNvbnN0IG1ha2VBY3Rpb25DcmVhdG9ycyA9IChjb250ZXh0SWQ6IHN0cmluZykgPT4gKHtcbiAgUmVzZXRQYWdpbmF0aW9uU3RhdGU6ICgpID0+IG5ldyBSZXNldFBhZ2luYXRpb25TdGF0ZShjb250ZXh0SWQpLFxuICBHZXROZXh0UGFnZTogKCkgPT4gbmV3IEdldE5leHRQYWdlKGNvbnRleHRJZCksXG4gIEdldE5leHRQYWdlU3VjY2VzczogKGVudGl0eUlkczogRW50aXR5SWRbXSwgZG9uZTogYm9vbGVhbikgPT5cbiAgICBuZXcgR2V0TmV4dFBhZ2VTdWNjZXNzKGNvbnRleHRJZCwgZW50aXR5SWRzLCBkb25lKSxcbiAgR2V0TmV4dFBhZ2VFbXB0eTogKCkgPT4gbmV3IEdldE5leHRQYWdlRW1wdHkoY29udGV4dElkKSxcbiAgUHJldlBhZ2U6ICgpID0+IG5ldyBQcmV2UGFnZShjb250ZXh0SWQpLFxuICBOZXh0UGFnZTogKCkgPT4gbmV3IE5leHRQYWdlKGNvbnRleHRJZCksXG59KTtcblxuZXhwb3J0IGNvbnN0IG1ha2VEaXNwYXRjaGVycyA9IChcbiAgY29udGV4dElkOiBzdHJpbmcsXG4gIGRpc3BhdGNoOiAoYWN0aW9uOiBBY3Rpb24pID0+IHZvaWQsXG4pID0+IHtcbiAgY29uc3QgYWN0aW9uQ3JlYXRvcnMgPSBtYWtlQWN0aW9uQ3JlYXRvcnMoY29udGV4dElkKTtcblxuICByZXR1cm4ge1xuICAgIFJlc2V0UGFnaW5hdGlvblN0YXRlOiAoKSA9PiBkaXNwYXRjaChhY3Rpb25DcmVhdG9ycy5SZXNldFBhZ2luYXRpb25TdGF0ZSgpKSxcbiAgICBHZXROZXh0UGFnZTogKCkgPT4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvcnMuR2V0TmV4dFBhZ2UoKSksXG4gICAgR2V0TmV4dFBhZ2VTdWNjZXNzOiAoZW50aXR5SWRzOiBFbnRpdHlJZFtdLCBkb25lOiBib29sZWFuKSA9PlxuICAgICAgZGlzcGF0Y2goYWN0aW9uQ3JlYXRvcnMuR2V0TmV4dFBhZ2VTdWNjZXNzKGVudGl0eUlkcywgZG9uZSkpLFxuICAgIEdldE5leHRQYWdlRW1wdHk6ICgpID0+IGRpc3BhdGNoKGFjdGlvbkNyZWF0b3JzLkdldE5leHRQYWdlRW1wdHkoKSksXG4gICAgUHJldlBhZ2U6ICgpID0+IGRpc3BhdGNoKGFjdGlvbkNyZWF0b3JzLlByZXZQYWdlKCkpLFxuICAgIE5leHRQYWdlOiAoKSA9PiBkaXNwYXRjaChhY3Rpb25DcmVhdG9ycy5OZXh0UGFnZSgpKSxcbiAgfTtcbn07XG4iXX0=