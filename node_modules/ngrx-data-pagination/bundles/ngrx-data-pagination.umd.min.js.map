{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngrx-data-pagination/lib/pagination/iterator/pagination-function.ts","ng://ngrx-data-pagination/lib/pagination/iterator/page-iterator.ts","ng://ngrx-data-pagination/lib/pagination/iterator/async-page-generator.ts","ng://ngrx-data-pagination/lib/pagination/store/actions.ts","ng://ngrx-data-pagination/lib/pagination/store/selectors.ts","ng://ngrx-data-pagination/lib/pagination/store/state.ts","ng://ngrx-data-pagination/lib/pagination/store-interfaces/store-pagination-context.ts","ng://ngrx-data-pagination/lib/pagination/store-interfaces/ngrx/selectors.ts","ng://ngrx-data-pagination/lib/pagination/store-interfaces/ngrx/default-store-key.ts","ng://ngrx-data-pagination/lib/pagination/store-interfaces/ngrx/pagination.ts","ng://ngrx-data-pagination/lib/pagination/store-interfaces/ngrx/pagination-factory.service.ts","ng://ngrx-data-pagination/lib/pagination/store/reducer.ts","ng://ngrx-data-pagination/lib/pagination/store-interfaces/ngrx/pagination.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","__await","__asyncGenerator","asyncIterator","q","a","b","resume","fulfill","settle","shift","observableToPromisePaginationFunction","observableFn","prevState","toPromise","PageIterator","paginationFunction","_this","pending","asyncPageGenerator","page","data","undefined","state","_a","getNextPage","Error","_b","RESET_PAGINATION_STATE","GET_NEXT_PAGE","GET_NEXT_PAGE_SUCCESS","GET_NEXT_PAGE_EMPTY","PREV_PAGE","NEXT_PAGE","T","PaginationActionType","ResetPaginationState","contextId","type","GetNextPage","GetNextPageSuccess","entityIds","GetNextPageEmpty","PrevPage","NextPage","makeDispatchers","dispatch","actionCreators","makeActionCreators","finalPageIndex","pages","flatten","arrays","reduce","as","contextSelectors","currentPageIds","currentPage","allIds","allPageIds","nextPageLoaded","nextPageLoading","loadingNewPage","Number","isInteger","pageNumber","onFirstPage","onFinalPage","finalIndex","defaultPaginationContextState","progressionCancelled","defaultPaginationState","contexts","StorePaginationContext","onReceivePage","state$","entityMap$","contextState","pageIterator","contextState$","pipe","map","subscription","subscribe","dispatchers","shareReplay","setTimeout","nextPage","getNextPageP","incrementCurrentPage","id","prevPage","defineProperty","combineLatest","entityMap","entityId","destroy","unsubscribe","mapValues","obj","tslib_1.__values","keys","_c","k","basicPaginationSelectors","paginationState","createFeatureSelector","createSelector","advancedPaginationSelectors","selectEntityMap","ids","all","allPaginationSelectors","basicSelectors","advancedSelectors","allPaginationObservables","store","allSelectors","selector","select","Pagination","entityService","ngrxDataPaginationStoreKey","addToCache","paginationState$","selectors$","storePaginationContext","action","upsertManyInCache","createAndDispatch","EntityOp","SAVE_UPSERT_MANY_SUCCESS","selectors","_loadAllPages","from","_loadAllPagesP","take","filter","loading","PaginationFactory","counter","create","entityName","Injectable","Store","paginationContextReducer","isFirstFetchedPage","paginationReducer","startsWith","PaginationModule","parentModule","storeKey","forRoot","ngModule","providers","provide","useValue","NgModule","args","declarations","imports","StoreModule","forFeature","exports","decorators","Optional","SkipSelf","Inject"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable } from 'rxjs';\n\nexport type PaginationFunctionCurried<Entity, State, QueryOptions> = (\n  queryOptions: QueryOptions,\n) => (\n  prevState?: State,\n) => Observable<{\n  nextState: State;\n  data: Entity[];\n}>;\n\nexport interface Page<Entity, State> {\n  state: State;\n  data: Entity[];\n  done: boolean;\n}\n\nexport type PaginationFunction<Entity, State = any> = (\n  prevState?: State,\n) => Promise<Page<Entity, State>>;\n\nexport type ObservablePaginationFunction<Entity, State> = (\n  prevState?: State,\n) => Observable<Page<Entity, State>>;\n\nexport const observableToPromisePaginationFunction = <Entity, State>(\n  observableFn: ObservablePaginationFunction<Entity, State>,\n): PaginationFunction<Entity, State> => (prevState?: State) =>\n  observableFn(prevState).toPromise();\n","import { asyncPageGenerator } from './async-page-generator';\nimport { PaginationFunction } from './pagination-function';\n\nexport class PageIterator<Entity> {\n  private asyncPageGenerator: any; //  AsyncPageGenerator<Entity>;\n  public done = false;\n  private pending = false;\n\n  constructor(paginationFunction: PaginationFunction<Entity>) {\n    this.asyncPageGenerator = asyncPageGenerator(paginationFunction);\n  }\n\n  async getNextPage(): Promise<Entity[]> {\n    if (this.pending) {\n      throw new Error('cannot queue pages (yet)');\n    }\n\n    if (this.done) {\n      throw new Error('This PageIterator is done. Try creating a new one');\n    }\n\n    this.pending = true;\n\n    const { value, done } = await this.asyncPageGenerator.next();\n\n    this.pending = false;\n    this.done = done;\n    return value;\n  }\n\n  [Symbol.asyncIterator] = () => this.asyncPageGenerator;\n}\n","import { Page, PaginationFunction } from './pagination-function';\n\n// TODO fix TS setup for AsyncPageGenerator types\n\n// export type AsyncPageGenerator<Entity> = AsyncGenerator<Entity[], Entity[], any>;\n\nexport async function* asyncPageGenerator<Entity, State>(\n  paginationFunction: PaginationFunction<Entity, State>,\n) {\n  // : AsyncGenerator<Entity[], Entity[], any>\n  let page: Page<Entity, State> = {\n    data: undefined,\n    state: undefined,\n    done: false,\n  };\n\n  while (true) {\n    page = await paginationFunction(page.state);\n    if (page.done) {\n      return page.data;\n    }\n    yield page.data;\n  }\n}\n\n// export const examplePaginationFunction: PaginationFunction<number, number> = state =>\n//   Promise.resolve({ data: [state], state: state + 1, done: false, });\n\n// export const exampleAsyncPageGenerator = asyncPageGenerator(examplePaginationFunction);\n\n// const f = async () => {\n//   for await (const page of exampleAsyncPageGenerator) {\n//     console.log('page', page);\n//   }\n// };\n","import { EntityId } from '../entity';\n\nexport enum PaginationActionType {\n  RESET_PAGINATION_STATE = '[mb-Pagination] Reset Pagination State',\n  GET_NEXT_PAGE = '[mb-Pagination] Get Next Page',\n  GET_NEXT_PAGE_SUCCESS = '[mb-Pagination] Get Next Page Success',\n  GET_NEXT_PAGE_EMPTY = '[mb-Pagination] Get Next Page Empty',\n  PREV_PAGE = '[mb-Pagination] Prev Page',\n  NEXT_PAGE = '[mb-Pagination] Next Page',\n}\n\nconst T = PaginationActionType;\n\ninterface Action {\n  type: string;\n}\n\nexport interface PaginationActionT extends Action {\n  type: PaginationActionType;\n  contextId: string;\n}\n\nexport class ResetPaginationState implements PaginationActionT {\n  readonly type = T.RESET_PAGINATION_STATE;\n  constructor(public contextId: string) {}\n}\nexport class GetNextPage implements PaginationActionT {\n  readonly type = T.GET_NEXT_PAGE;\n  constructor(public contextId: string) {}\n}\nexport class GetNextPageSuccess implements PaginationActionT {\n  readonly type = T.GET_NEXT_PAGE_SUCCESS;\n  constructor(\n    public contextId: string,\n    public entityIds: EntityId[],\n    public done: boolean,\n  ) {}\n}\nexport class GetNextPageEmpty implements PaginationActionT {\n  readonly type = T.GET_NEXT_PAGE_EMPTY;\n  constructor(\n    public contextId: string\n  ) {}\n}\nexport class PrevPage implements PaginationActionT {\n  readonly type = T.PREV_PAGE;\n  constructor(public contextId: string) {}\n}\nexport class NextPage implements PaginationActionT {\n  readonly type = T.NEXT_PAGE;\n  constructor(public contextId: string) {}\n}\n\nexport type PaginationAction =\n  | ResetPaginationState\n  | GetNextPage\n  | GetNextPageSuccess\n  | GetNextPageEmpty\n  | PrevPage\n  | NextPage;\n\nexport const makeActionCreators = (contextId: string) => ({\n  ResetPaginationState: () => new ResetPaginationState(contextId),\n  GetNextPage: () => new GetNextPage(contextId),\n  GetNextPageSuccess: (entityIds: EntityId[], done: boolean) =>\n    new GetNextPageSuccess(contextId, entityIds, done),\n  GetNextPageEmpty: () => new GetNextPageEmpty(contextId),\n  PrevPage: () => new PrevPage(contextId),\n  NextPage: () => new NextPage(contextId),\n});\n\nexport const makeDispatchers = (\n  contextId: string,\n  dispatch: (action: Action) => void,\n) => {\n  const actionCreators = makeActionCreators(contextId);\n\n  return {\n    ResetPaginationState: () => dispatch(actionCreators.ResetPaginationState()),\n    GetNextPage: () => dispatch(actionCreators.GetNextPage()),\n    GetNextPageSuccess: (entityIds: EntityId[], done: boolean) =>\n      dispatch(actionCreators.GetNextPageSuccess(entityIds, done)),\n    GetNextPageEmpty: () => dispatch(actionCreators.GetNextPageEmpty()),\n    PrevPage: () => dispatch(actionCreators.PrevPage()),\n    NextPage: () => dispatch(actionCreators.NextPage()),\n  };\n};\n","import { EntityId } from '../entity';\nimport { PaginationContextState } from './state';\n\nconst finalPageIndex = ({ done, pages }: PaginationContextState): number => {\n  if (!done || !pages || !pages.length) {\n    return null;\n  }\n\n  return pages.length - 1;\n};\n\nconst flatten = <A>(arrays: A[][]): A[] => arrays.reduce((result, as) => result.concat(as))\n\nexport const contextSelectors = {\n  currentPageIds: ({\n    pages,\n    currentPage,\n  }: PaginationContextState): EntityId[] => (pages ? pages[currentPage] : null),\n  allIds: ({ pages }: PaginationContextState): EntityId[] => flatten(pages),\n  allPageIds: ({ pages }: PaginationContextState): EntityId[][] => pages,\n  nextPageLoaded: ({ pages, currentPage }: PaginationContextState): boolean =>\n    !!pages[currentPage + 1],\n  nextPageLoading: ({\n    pages,\n    currentPage,\n    loadingNewPage,\n  }: PaginationContextState): boolean => {\n    if (!Number.isInteger(currentPage)) {\n      return loadingNewPage;\n    }\n    return !pages[currentPage + 1] && loadingNewPage;\n  },\n  loadingNewPage: ({ loadingNewPage }: PaginationContextState): boolean =>\n    loadingNewPage,\n  pageNumber: ({ currentPage }: PaginationContextState): number =>\n    currentPage >= 0 ? currentPage : null,\n  done: ({ done }: PaginationContextState) => done,\n  finalPageIndex,\n  onFirstPage: ({ currentPage }: PaginationContextState) => currentPage === 0,\n  onFinalPage: (state: PaginationContextState) => {\n    const { currentPage } = state;\n    const finalIndex = finalPageIndex(state);\n\n    if (typeof finalIndex !== 'number' || typeof currentPage !== 'number') {\n      return false;\n    }\n\n    return currentPage === finalIndex;\n  },\n};\n\nexport type ContextSelectors = typeof contextSelectors;\n","import { EntityId } from '../entity';\n\nexport interface PaginationContextState {\n  // storing entity ids instead of enities allows the programmer\n  // to teardown resources separately from pagination\n  pages: EntityId[][];\n  loadingNewPage: boolean;\n  currentPage: number;\n  done: boolean;\n  progressionCancelled: boolean; // cancels the automatic page progression when a new page is loaded\n}\n\nexport interface PaginationState {\n  contexts: { [contextId: string]: PaginationContextState };\n}\n\nexport const defaultPaginationContextState: PaginationContextState = {\n  pages: [],\n  loadingNewPage: false,\n  currentPage: -1,\n  done: false,\n  progressionCancelled: false,\n};\n\nexport const defaultPaginationState: PaginationState = { contexts: {} };\n","import { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AnyEntity, EntityMap } from '../entity';\nimport { PageIterator } from '../iterator/page-iterator';\nimport { PaginationFunction } from '../iterator/pagination-function';\nimport { makeDispatchers, PaginationActionT } from '../store/actions';\nimport { contextSelectors } from '../store/selectors';\nimport {\n  defaultPaginationContextState,\n  PaginationContextState,\n  PaginationState,\n} from '../store/state';\n\n// assumes paginator reducer is plugged in\n\n/**\n * This is a pagination context usable with Redux, ngrx, or\n * any other similar implementations. It writes to, but does\n * not read from the store. It assumes:\n * 1. `dispatch` dispatches an action to the store\n * 2. TODO this library's reducer has been installed\n */\nexport class StorePaginationContext<Entity extends AnyEntity> {\n  private pageIterator: PageIterator<Entity>;\n  private dispatchers: ReturnType<typeof makeDispatchers>;\n  private contextState = defaultPaginationContextState;\n  private contextState$: Observable<PaginationContextState>;\n  private entityMap$: Observable<EntityMap<Entity>>;\n  private subscription: Subscription;\n\n  constructor(\n    // Arbitrary. For now, only use one ReduxLikePaginationContext per contextId\n    contextId: string,\n\n    // For requesting the pages\n    paginationFunction: PaginationFunction<Entity>,\n\n    // Dispatch an action meant for the PaginationReducer\n    dispatch: (action: PaginationActionT) => void,\n\n    // Allow the programmer to store entities as they like\n    private onReceivePage: (entities: Entity[]) => void,\n\n    state$: Observable<PaginationState>,\n    entityMap$: Observable<EntityMap<Entity>>,\n  ) {\n    this.contextState$ = state$.pipe(\n      map(state =>\n        state ? state.contexts[contextId] : defaultPaginationContextState,\n      ),\n    );\n\n    this.subscription = this.contextState$.subscribe(contextState => {\n      this.contextState = contextState;\n    });\n\n    this.dispatchers = makeDispatchers(contextId, dispatch);\n    this.dispatchers.ResetPaginationState();\n    this.pageIterator = new PageIterator(paginationFunction);\n\n    this.entityMap$ = entityMap$.pipe(shareReplay(1));\n\n    // wait until next event loop in case of setup time\n    setTimeout(() => this.nextPage(), 0);\n  }\n\n  async getNextPageP(): Promise<Entity[]> {\n    const nextPageLoaded = contextSelectors.nextPageLoaded(this.contextState);\n    if (nextPageLoaded) {\n      this.incrementCurrentPage();\n      return;\n    }\n\n    if (contextSelectors.done(this.contextState)) {\n      throw new Error('Cannot get more pages after becoming done');\n    }\n\n    this.dispatchers.GetNextPage();\n    const page = await this.pageIterator.getNextPage();\n    this.onReceivePage(page);\n\n    if (!page) {\n      throw new Error('bad page in getNextPageP');\n    }\n\n    const entityIds = page.map(({ id }) => id);\n\n    if (!entityIds.length) {\n      this.dispatchers.GetNextPageEmpty();\n    } else {\n      this.dispatchers.GetNextPageSuccess(\n        entityIds,\n        this.pageIterator.done,\n      );\n    }\n\n    return page;\n  }\n\n  nextPage() {\n    this.getNextPageP();\n  }\n\n  prevPage() {\n    if (this.contextState.currentPage <= 0) {\n      throw new Error('Cannot go back from page 0');\n    }\n    this.dispatchers.PrevPage();\n  }\n\n  private incrementCurrentPage() {\n    this.dispatchers.NextPage();\n  }\n\n  get currentPage$(): Observable<Entity[] | null> {\n    return combineLatest(this.entityMap$, this.contextState$).pipe(\n      map(([entityMap, contextState]) => {\n        const currentPageIds = contextSelectors.currentPageIds(contextState);\n        if (!currentPageIds) {\n          return null;\n        }\n        return currentPageIds.map(entityId => entityMap[entityId]);\n      }),\n    );\n  }\n\n  destroy() {\n    this.subscription.unsubscribe();\n  }\n\n  [Symbol.asyncIterator] = () => this.pageIterator[Symbol.asyncIterator];\n}\n","import { Dictionary } from '@ngrx/entity';\nimport {\n  createFeatureSelector,\n  createSelector,\n  select,\n  Selector,\n  Store,\n} from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ContextSelectors, contextSelectors } from '../../store/selectors';\nimport { PaginationContextState, PaginationState } from '../../store/state';\nimport { defaultStoreKey } from './default-store-key';\n\n// These selections require knowledge of the entity cache\ninterface AdvancedSelections<Entity> {\n  page: Entity[] | null;\n  all: Entity[] | null;\n}\n\nexport type BasicNgrxPaginationSelectors = {\n  [K in keyof ContextSelectors]: Selector<any, ReturnType<ContextSelectors[K]>>;\n};\n\ntype AdvancedNgrxPaginationSelectors<Entity> = {\n  [K in keyof AdvancedSelections<Entity>]: Selector<\n    any,\n    AdvancedSelections<Entity>[K]\n  >;\n};\n\nexport type AllNgrxPaginationSelectors<Entity> = BasicNgrxPaginationSelectors &\n  AdvancedNgrxPaginationSelectors<Entity>;\n\nexport type BasicNgrxPaginationObservables = {\n  [K in keyof ContextSelectors]: Observable<ReturnType<ContextSelectors[K]>>;\n};\n\ntype AdvancedNgrxPaginationObservables<Entity> = {\n  [K in keyof AdvancedSelections<Entity>]: Observable<\n    AdvancedSelections<Entity>[K]\n  >;\n};\n\nexport type AllNgrxPaginationObservables<\n  Entity\n> = BasicNgrxPaginationObservables & AdvancedNgrxPaginationObservables<Entity>;\n\nconst mapValues = <A>(obj: any, f: any): { [K in keyof A]: any } => {\n  const result = {};\n\n  for (const k of Object.keys(obj)) {\n    result[k] = f(obj[k]);\n  }\n\n  return result as any;\n};\n\n/**\n * Creates pagination selectors that only know about the pagination state\n */\nconst basicPaginationSelectors = (\n  contextId: string,\n): BasicNgrxPaginationSelectors => {\n  const paginationState = createFeatureSelector<PaginationState>(\n    defaultStoreKey,\n  );\n  const contextState = createSelector(\n    paginationState,\n    s => s.contexts[contextId],\n  );\n\n  const contextSelector = <A>(f: (s: PaginationContextState) => A) =>\n    createSelector(contextState, f);\n\n  return mapValues(contextSelectors, contextSelector);\n};\n\n/**\n * Creates selectors that know about the entity cache\n */\nconst advancedPaginationSelectors = <Entity>(\n  basicPaginationSelectors: BasicNgrxPaginationSelectors,\n  selectEntityMap: Selector<any, Dictionary<Entity>>,\n): AdvancedNgrxPaginationSelectors<Entity> => {\n  return {\n    page: createSelector(\n      basicPaginationSelectors.currentPageIds,\n      selectEntityMap,\n      (ids, entityMap) => {\n        if (!ids || !entityMap) {\n          return null;\n        }\n        return ids.reduce((a, id) => {\n          if (id in entityMap) {\n            a.push(entityMap[id]);\n          }\n          return a;\n        }, []);\n      },\n    ),\n    all: createSelector(\n      basicPaginationSelectors.allIds,\n      selectEntityMap,\n      (allIds, entityMap) => {\n        if (!allIds || !entityMap) {\n          return null;\n        }\n        return allIds.map(id => entityMap[id]);\n      },\n    ),\n  };\n};\n\nexport const allPaginationSelectors = <Entity>(\n  contextId: string,\n  selectEntityMap: Selector<any, Dictionary<Entity>>,\n) => {\n  const basicSelectors = basicPaginationSelectors(contextId);\n  const advancedSelectors = advancedPaginationSelectors(\n    basicSelectors,\n    selectEntityMap,\n  );\n  return {\n    ...basicSelectors,\n    ...advancedSelectors,\n  };\n};\n\nexport const allPaginationObservables = <Entity>(\n  store: Store<any>,\n  allSelectors: AllNgrxPaginationSelectors<Entity>,\n): AllNgrxPaginationObservables<Entity> => {\n  const sel = <A>(selector: Selector<any, A>) => store.pipe(select(selector));\n  return mapValues(allSelectors, sel);\n};\n","export const defaultStoreKey = 'ngrxDataPagination';\n","import { EntityCollectionServiceBase, EntityOp } from '@ngrx/data';\nimport { Action, select, Store } from '@ngrx/store';\nimport { from, Observable } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { AnyEntity } from '../../entity';\nimport {\n  ObservablePaginationFunction,\n  observableToPromisePaginationFunction,\n} from '../../iterator/pagination-function';\nimport { PaginationState } from '../../store/state';\nimport { StorePaginationContext } from '../store-pagination-context';\nimport {\n  AllNgrxPaginationObservables,\n  AllNgrxPaginationSelectors,\n  allPaginationObservables,\n  allPaginationSelectors,\n} from './selectors';\n\n/**\n * Adapts `StorePaginationContext` to work with ngrx/data\n */\nexport class Pagination<Entity extends AnyEntity, NextPageState = any> {\n  private storePaginationContext: StorePaginationContext<Entity>;\n  public selectors: AllNgrxPaginationSelectors<Entity>;\n  public selectors$: AllNgrxPaginationObservables<Entity>;\n\n  constructor(\n    contextId: string,\n    paginationFunction: ObservablePaginationFunction<Entity, NextPageState>,\n    private entityService: EntityCollectionServiceBase<Entity, any>,\n    store: Store<any>,\n    ngrxDataPaginationStoreKey: string,\n    addToCache: boolean,\n  ) {\n    const dispatch = (action: Action) => store.dispatch(action);\n\n    const onReceivePage = (page: Entity[]): void => {\n      if (!addToCache) {\n        return;\n      }\n      this.entityService.upsertManyInCache(page);\n      this.entityService.createAndDispatch(EntityOp.SAVE_UPSERT_MANY_SUCCESS, page);\n    };\n\n    const paginationState$ = store.pipe(\n      select(ngrxDataPaginationStoreKey),\n    ) as Observable<PaginationState>;\n\n    const entityMap$ = entityService.selectors$.entityMap$;\n\n    this.storePaginationContext = new StorePaginationContext(\n      contextId,\n      observableToPromisePaginationFunction(paginationFunction),\n      dispatch,\n      onReceivePage,\n      paginationState$,\n      entityMap$,\n    );\n\n    this.selectors = allPaginationSelectors(\n      contextId,\n      entityService.selectors.selectEntityMap,\n    );\n    this.selectors$ = allPaginationObservables(store, this.selectors);\n  }\n\n  nextPage(): void {\n    return this.storePaginationContext.nextPage();\n  }\n\n  prevPage(): void {\n    return this.storePaginationContext.prevPage();\n  }\n\n  /** Not yet cancellable! Use with caution. */\n  _loadAllPages(): Observable<unknown> {\n    return from(this._loadAllPagesP()).pipe(take(1));\n  }\n\n  private async _loadAllPagesP() {\n    // wait until not loading\n    await this.selectors$.nextPageLoading\n      .pipe(\n        filter(loading => !loading),\n        take(1),\n      )\n      .toPromise();\n\n    // start the next-page request\n    this.nextPage();\n\n    // wait until not loading, again\n    await this.selectors$.nextPageLoading\n      .pipe(\n        filter(loading => !loading),\n        take(1),\n      )\n      .toPromise();\n\n    const done = await this.selectors$.done\n      .pipe(take(1))\n      .toPromise();\n\n    if (done) {\n      // done case: let the whole function return\n      return;\n    }\n\n    // recursive case: not done, so recurse\n    return this._loadAllPages();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityCollectionServiceBase } from '@ngrx/data';\nimport { Store } from '@ngrx/store';\nimport { AnyEntity } from '../../entity';\nimport { ObservablePaginationFunction } from '../../iterator/pagination-function';\nimport { defaultStoreKey } from './default-store-key';\nimport { Pagination } from './pagination';\n\nexport interface PaginationFactoryArgs<\n  Entity extends AnyEntity,\n  NextPageState\n> {\n  contextId?: string;\n  paginationFunction: ObservablePaginationFunction<Entity, NextPageState>;\n  entityService: EntityCollectionServiceBase<Entity, any>;\n  addToCache?: boolean;\n}\n\n@Injectable()\nexport class PaginationFactory {\n  private counter = 0;\n\n  constructor(private store: Store<any>) {}\n\n  create<Entity extends AnyEntity, NextPageState>({\n    entityService,\n    paginationFunction,\n    addToCache = true,\n    contextId = `${entityService.entityName}-${this.counter++}`,\n  }: PaginationFactoryArgs<Entity, NextPageState>): Pagination<\n    Entity,\n    NextPageState\n  > {\n    return new Pagination(\n      contextId,\n      paginationFunction,\n      entityService,\n      this.store,\n      defaultStoreKey,\n      addToCache,\n    );\n  }\n}\n","import { PaginationAction, PaginationActionType as T } from './actions';\nimport { contextSelectors } from './selectors';\nimport {\n  defaultPaginationContextState,\n  defaultPaginationState,\n  PaginationContextState,\n  PaginationState,\n} from './state';\n\nexport function paginationContextReducer(\n  state: PaginationContextState = defaultPaginationContextState,\n  action: PaginationAction,\n): PaginationContextState {\n  switch (action.type) {\n    case T.RESET_PAGINATION_STATE:\n      return defaultPaginationContextState;\n\n    case T.GET_NEXT_PAGE:\n      return {\n        ...state,\n        loadingNewPage: true,\n        progressionCancelled: false,\n      };\n\n    case T.GET_NEXT_PAGE_SUCCESS:\n      return {\n        ...state,\n        loadingNewPage: false,\n        pages: [...state.pages, action.entityIds],\n        currentPage: state.progressionCancelled\n          ? state.currentPage\n          : state.currentPage + 1,\n        done: action.done,\n        progressionCancelled: false,\n      };\n\n    case T.GET_NEXT_PAGE_EMPTY:\n      const isFirstFetchedPage = (state.pages.length === 0);\n      return {\n        ...state,\n        loadingNewPage: false,\n        pages: isFirstFetchedPage ? [[]] : [...state.pages],\n        currentPage: state.progressionCancelled && !isFirstFetchedPage\n          ? state.currentPage\n          : state.currentPage + 1,\n        done: true,\n        progressionCancelled: false,\n      };\n\n    case T.PREV_PAGE:\n      return {\n        ...state,\n        currentPage: state.currentPage - 1,\n        // If the next page is loading when the user goes back,\n        // don't progress the page number when the page comes in\n        progressionCancelled: contextSelectors.nextPageLoading(state),\n      };\n\n    case T.NEXT_PAGE:\n      return {\n        ...state,\n        currentPage: state.currentPage + 1,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function paginationReducer(\n  state: PaginationState = defaultPaginationState,\n  action: PaginationAction,\n): PaginationState {\n  if (!action || !action.type.startsWith('[mb-Pagination]')) {\n    return state;\n  }\n\n  return {\n    ...state,\n    contexts: {\n      ...state.contexts,\n      [action.contextId]: paginationContextReducer(\n        state.contexts[action.contextId],\n        action,\n      ),\n    },\n  };\n}\n","import {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { paginationReducer } from '../../store/reducer';\nimport { defaultStoreKey } from './default-store-key';\nimport { PaginationFactory } from './pagination-factory.service';\n\nconst NGRX_DATA_PAGINATION_STORE_KEY = 'NGRX_DATA_PAGINATION_STORE_KEY';\n\n@NgModule({\n  declarations: [],\n  imports: [StoreModule.forFeature(defaultStoreKey, paginationReducer)],\n  exports: [],\n  providers: [PaginationFactory],\n})\nexport class PaginationModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule: PaginationModule,\n    @Optional() @Inject(NGRX_DATA_PAGINATION_STORE_KEY) storeKey: string,\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'PaginationModule is already loaded. Import it in the root module (usually the AppModule) only',\n      );\n    }\n    if (!storeKey) {\n      throw new Error(\n        'ngrx-data-pagination requires PaginationModule.forRoot() to be imported',\n      );\n    }\n  }\n\n  /**\n   * `storeKey` doesn't actually work yet`\n   */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PaginationModule,\n      providers: [\n        {\n          provide: NGRX_DATA_PAGINATION_STORE_KEY,\n          useValue: defaultStoreKey,\n        },\n      ],\n    };\n  }\n}\n"]}